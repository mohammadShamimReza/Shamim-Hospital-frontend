import { z } from "zod";

// Define the User schema using Zod for frontend validation
export const userSchema = z.object({
  id: z.number().optional(), // ID is optional as it's usually generated by the backend
  name: z.string().min(2, "Name must be at least 2 characters"),
  email: z.string().email("Invalid email address"),
  password: z.string().min(6, "Password must be at least 6 characters"), // Secure password
  address: z.string().optional(),
  profile_image: z.string().url("Profile image must be a valid URL").optional(),
  role: z.string().min(1, "Role is required"), // Assuming role is a required field (e.g., 'admin', 'user')
  appointments: z.array(z.any()).optional(), // Assuming appointments data may vary; use z.any() or define a nested schema if available
});

// Define the User type based on the Zod schema
export type User = z.infer<typeof userSchema>;
